@model eLearningLMS.ViewModels.UserViewModel

@{
    ViewBag.Title = "Edit User";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit User</h2>

@using (Html.BeginForm("Edit", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>UserViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.ProfileImage, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @if (Model.ProfileImage != null)
                {
                    var base64 = Convert.ToBase64String(Model.ProfileImage);
                    var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                    <img src="@imgSrc" width="100" height="100" />
                }
                <input type="file" name="ProfileImage" id="fileUpload" accept=".png,.jpg,.jpeg,.gif,.tif" />
            </div>
        </div>

        <div class="form-group">
            @Html.Label("user Role", new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @*@Html.DropDownList("Name")*@
                @Html.DropDownList("UserRoles", (SelectList)ViewBag.Name, " ", htmlAttributes: new { @class = "form-control" })
            </div>
        </div>
        

        @*<div class="form-group">
                @Html.LabelFor(model => model.UserRoles, "User Role", new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.DropDownList("UserRoles", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UserRoles, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @Html.HiddenFor(m => m.Id)
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
